[DEFAULT]
verbose = False
log_format = %(levelname)s %(name)s: %(message)s
network_api = neutron
notification_driver = messagingv2
notification_topics = notifications_designate

[service:central]
default_pool_id = '@{designate_pool_id}'

[service:api]
api_host = 0.0.0.0
api_port = 9001
#api_base_uri = 'http://127.0.0.1:9001/'
auth_strategy = keystone
enable_api_v1 = True
enabled_extensions_v1 = diagnostics, quotas, reports, sync, touch
enable_api_v2 = True
enabled_extensions_v2 = quotas, reports

[keystone_authtoken]
auth_uri = http://127.0.0.1:5000
auth_url = http://127.0.0.1:35357
auth_plugin = password
project_domain_id = default
user_domain_id = default
project_name = services
username = @{ks_designate_user}
password = @{ks_designate_password}

[service:sink]
# List of notification handlers to enable, configuration of these needs to
# correspond to a [handler:my_driver] section below or else in the config
# Can be one or more of : nova_fixed, neutron_floatingip
enabled_notification_handlers = nova_fixed, neutron_floatingip

[service:mdns]
#host = 0.0.0.0
#port = 5354

[service:agent]
#workers = None
#host = 0.0.0.0
#port = 5358
#tcp_backlog = 100
#allow_notify = 127.0.0.1
#masters = 127.0.0.1:5354
#backend_driver = fake
#transfer_source = None
#notify_delay = 0

[service:zone_manager]
# List of Zone Manager tasks to enable, a value of None will enable all tasks.
# Can be one or more of: periodic_exists
#enabled_tasks = None

[zone_manager_task:domain_purge]
# How frequently to purge deleted domains, in seconds
#interval = 3600  # 1h

# How old deleted records should be (deleted_at) to be purged, in seconds
#time_threshold = 604800  # 7 days

[service:pool_manager]
# The ID of the pool managed by this instance of the Pool Manager
pool_id = @{designate_pool_id}

# The cache driver to use
#cache_driver = memcache

# How old deleted records should be (deleted_at) to be purged, in seconds
#time_threshold = 604800  # 7 days

[oslo_messaging_rabbit]
rabbit_host = 127.0.0.1
rabbit_userid = guest
rabbit_password = guest

[pool_manager_cache:sqlalchemy]
connection = mysql://@{db_designate_user}:@{db_designate_password}@127.0.0.1/@{db_designate_pool_database}

[pool_manager_cache:memcache]
memcached_servers = 127.0.0.1
#expiration = 3600

[pool:@{designate_pool_id}]
nameservers = @{designate_pool_nameserver}
targets = @{designate_pool_target}
#also_notifies = 192.0.2.1:53, 192.0.2.2:53

[pool_nameserver:@{designate_pool_nameserver}]
port = 53
host = 127.0.0.1

[pool_target:@{designate_pool_target}]
options = rndc_host: 127.0.0.1, rndc_port: 953, rndc_config_file: /etc/bind/rndc.conf, rndc_key_file: /etc/bind/rndc.key, port: 53, host: 127.0.0.1
masters = 127.0.0.1:5354
type = bind9

[network_api:neutron]
endpoints = RegionOne|http://127.0.0.1:9696
endpoint_type = publicURL
admin_username = @{ks_designate_user}
admin_password = @{ks_designate_password}
admin_tenant_name = services
auth_url = http://127.0.0.1:35357/v2.0
auth_strategy = keystone

[storage:sqlalchemy]
connection = mysql://@{db_designate_user}:@{db_designate_password}@127.0.0.1/@{db_designate_database}

# nova and neutron notification are handled in a seperate
# configuration file which already exists within the container
# image ( /etc/designate/designate-notifications.conf )
#
# this specific configuration file may be modified at boot by
# the designate-sink startup script
#
# note: the use of a non-mapped file is mandatory to be able
# to modify it from within the container
#
# ------------------
# [handler:nova_fixed]
# # Domain ID of domain to create records in. Should be pre-created
# domain_id = @{designate_default_domain_id}
# notification_topics = notifications_designate
# control_exchange = 'nova'
# format = 'ip-%(octet0)s-%(octet1)s-%(octet2)s-%(octet3)s.%(domain)s'
# format = '%(hostname)s.%(domain)s'
#
# [handler:neutron_floatingip]
# # Domain ID of domain to create records in. Should be pre-created
# domain_id = @{designate_default_domain_id}
# notification_topics = notifications_designate
# control_exchange = 'neutron'
# format = 'ip-%(octet0)s-%(octet1)s-%(octet2)s-%(octet3)s.%(domain)s'
# ------------------

[backend:agent:bind9]
rndc_host = 127.0.0.1
rndc_port = 953
rndc_config_file = /etc/bind/rndc.conf
rndc_key_file = /etc/bind/rndc.key
zone_file_path = $state_path/zones
query_destination = 127.0.0.1

########################
## Library Configuration
########################
[oslo_concurrency]
lock_path = /var/lib/nova/tmp
